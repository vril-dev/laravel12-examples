services:
  backend:
    hostname: ${APP_BACKEND_HOST_NAME}
    # runtime: nvidia
    build:
      context: ${APP_BACKEND_BUILD_PATH}
      args:
        APP_GROUP: ${APP_BACKEND_GROUP}
        APP_GROUP_ID: ${APP_BACKEND_GROUP_ID}
        APP_USER: ${APP_BACKEND_USER}
        APP_USER_ID: ${APP_BACKEND_USER_ID}
        APP_BACKEND_BUILD_ENV: ${APP_BACKEND_BUILD_ENV}
        APP_BACKEND_BUILD_IMAGE: ${APP_BACKEND_BUILD_IMAGE}
        APP_BACKEND_SERVER_PATH: ${APP_BACKEND_SERVER_PATH}
        APP_BACKEND_SERVER_DOCUMENT_PATH: ${APP_BACKEND_SERVER_DOCUMENT_PATH}
        APP_BACKEND_PHP_MEMORY_LIMIT: ${APP_BACKEND_PHP_MEMORY_LIMIT}
        APP_BACKEND_XDEBUG_CLIENT_HOST: ${APP_BACKEND_XDEBUG_CLIENT_HOST}
        APP_BACKEND_XDEBUG_CLIENT_PORT: ${APP_BACKEND_XDEBUG_CLIENT_PORT}
        APP_BACKEND_XDEBUG_IDEKEY: ${APP_BACKEND_XDEBUG_IDEKEY}
        APP_BACKEND_HOST_NAME: ${APP_BACKEND_HOST_NAME}
    volumes:
      - ${APP_BACKEND_SOURCE_PATH}:${APP_BACKEND_SERVER_PATH}
    ports:
      - "${APP_BACKEND_PORT}:80"
    environment:
      - APP_BACKEND_SERVER_PATH=${APP_BACKEND_SERVER_PATH}
      # - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_VISIBLE_CAPABILITIES=all
    networks:
      app-networks:
        ipv4_address: ${APP_BACKEND_IP_ADDRESS}
    # restart: always
    deploy:
      resources:
        limits:
          memory: 4GB
          cpus: "4"

  frontend:
    hostname: ${APP_FRONTEND_HOST_NAME}
    build:
      context: ${APP_FRONTEND_SOURCE_PATH}
      dockerfile: ../${APP_FRONTEND_BUILD_PATH}/Dockerfile
      args:
        APP_GROUP: ${APP_FRONTEND_GROUP}
        APP_GROUP_ID: ${APP_FRONTEND_GROUP_ID}
        APP_USER: ${APP_FRONTEND_USER}
        APP_USER_ID: ${APP_FRONTEND_USER_ID}
        APP_FRONTEND_BUILD_ENV: ${APP_FRONTEND_BUILD_ENV}
        APP_FRONTEND_BUILD_IMAGE: ${APP_FRONTEND_BUILD_IMAGE}
        APP_FRONTEND_SERVER_PATH: ${APP_FRONTEND_SERVER_PATH}
    user: ${APP_FRONTEND_USER}
    working_dir: ${APP_FRONTEND_SERVER_PATH}
    environment:
      - REACT_APP_API_URL=${APP_FRONTEND_REACT_API_URL}
      - NODE_ENV=${APP_FRONTEND_NODE_ENV}
      - NPM_CONFIG_LOGLEVEL=${APP_FRONTEND_NPM_CONFIG_LOGLEVEL}
    volumes:
      - ${APP_FRONTEND_SOURCE_PATH}:${APP_FRONTEND_SERVER_PATH}
    ports:
      - ${APP_FRONTEND_PORT}:3000
    command: npm run dev
    networks:
      app-networks:
        ipv4_address: ${APP_FRONTEND_IP_ADDRESS}

  mysql84:
    image: ${APP_DB_BUILD_IMAGE}
    hostname: ${APP_DB_HOST_NAME}
    networks:
      app-networks:
        ipv4_address: ${APP_DB_IP_ADDRESS}
    command: mysqld --character-set-server=${APP_DB_CHARACTER_SET_SERVER} --collation-server=${APP_DB_COLLATION_SERVER} --max-allowed-packet=${APP_DB_MAX_ALLOWED_PACKET}
    environment:
      - MYSQL_ROOT_PASSWORD=${APP_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${APP_DB_DATABASE}
      - MYSQL_USER=${APP_DB_USER}
      - MYSQL_PASSWORD=${APP_DB_PASSWORD}
    ports:
      - ${APP_DB_PORT}:3306
    volumes:
      - ${APP_DB_VOLUMES}:/var/lib/mysql

networks:
  app-networks:
    name: ${APP_NETWORK_NAME}
    driver: bridge
    ipam:
      config:
        - subnet: ${APP_NETWORK_SUBNET}
          gateway: ${APP_NETWORK_GATEWAY}
